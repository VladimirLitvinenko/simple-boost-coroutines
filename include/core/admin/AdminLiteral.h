/**
 * @file AdminLiteral.h
 *
 * @brief Файл содержит глобальные литералы и константы для работы с проектами.
 *
 * @author Владимир Н. Литвиненко.
 * @orhanization Санкт-Петербургский филиал ПАО "НПО "Стрела"
 * @copyright Все права защищены.
 */

#ifndef SOSPOADMINLITERAL_H
#define SOSPOADMINLITERAL_H

#include <string>

namespace               spo   {
namespace               core  {
namespace               admin {

/**
 * @brief Констатна NULL_DEVICE содержить название пустрого устройства ОС *NIX.
 * Служит для обозначения перенаправления вывода потока в никуда (без отображения)
 */
const std::string           NULL_DEVICE     = "/dev/null";

/**
 * @brief Констатна WHEREIS_UTIL содержит название утилиты поиска расположения
 * команд ОС *NIX
 *
 * @se man(1) whereis
 */
const std::string           WHEREIS_UTIL    = "/usr/bin/whereis";

/**
 * @brief Констатна PING_UTIL содержит порядок вызова утилиты ping ОС *NIX
 * @param %1 - hostname, IP
 * @param %2 - literal @a PING_PARMS
 * @param %3 - literal @a NULL_DEVICE or STDOUT
 *
 * ping, ping6 - посылает пакеты ICMP ECHO_REQUEST узлам сети
 *
 * @see man(8) ping
 */
const std::string           PING_UTIL       = "ping %1 %2%3";
/**
 * @brief Констатна PING_PARMS предопределенный параметр количества запускеов утилиты ping
 *
 * @value -c (количество) -- Остановить  работу  после  передачи заданного количества
 * пакетов ECHO_REQUEST. Если задано ограничение на время работы, программа
 * будет  ждать  указанное количество ответных пакетов ECHO_REPLY в указанный период.
 *
 * @see PING_UTIL, man(8) ping
 */
const std::string           PING_PARMS      = "-c %1 ";

/**
 * @brief Констатна ARP_UTIL содержит название утилиты arp  управление системной
 * таблицей ARP для ОС *NIX.
 *
 * arp управляет или выводит кэш сетевого окружения IPv4 ядра системы.
 * С помощью arp можно добавлять записи в таблицу, удалять их или просматривать
 * текущее содержимое.
 *
 * ARP  означает  Address  Resolution Protocol - протокол решения адресов,
 * который используется для поиска MAC-адреса (Media Access Control - управление
 * доступом к среде) в сетевом окружении для указанного IPv4-адреса.
 *
 * @see man(8) arp
 */
const std::string           ARP_UTIL        = "arp";
/**
 * @brief Констатна ARP_PARMS содержит параметры утилиты arp (@a ARP_UTIL):
 * @value -n, --numeric показать числовые адреса, не пытаясь опрелять символьные
 *        имена узлов, портов или пользователей.
 *
 * @see man(8) arp
 */
const std::string           ARP_PARMS       = "-n";

/**
 * @brief Констатна PGREP_UTIL содержит название утилиты  pgrep просмотра активных
 * ппроцессов ОС *NIX.
 *
 * @see man(1) pgrep
 */
const std::string           PGREP_UTIL      = "pgrep";
/**
 * @brief Констатна PGREP_PARAMS cодержит список параметров для утилиты @a PGREP_UTIL.
 * @value -f, --full обязывает показать полный путь команды процесса.
 * @value -o, --oldest не выводить саму команду pgrep как процесс с искомым параметром.
 *
 * @see man(1) pgrep
 */
const std::string           PGREP_PARAMS    = "-fo";

/**
 * @brief Констатна USERADD_UTIL содержит название утилиты useradd регистрации
 *        нового пользователя или смены информацию по умолчанию о новых пользователях.
 *
 * @see man(8) useradd
 */
const std::string           USERADD_UTIL    = "useradd";

/**
 * @brief Констатна USERMOD_UTIL содержит название утилиты usermod смены
 *        учётной записи пользователя.
 *
 * Команда usermod изменяет системные файлы учётных записей согласно переданным
 * в командной строке параметрам.
 *
 * @see man(8) usermod
 */
const std::string           USERMOD_UTIL    = "usermod";

/**
 * @brief Констатна USERDEL_UTIL содержит название утилиты userdel удаления
 *        учётной записи и файлов пользователя.
 *
 * Команда userdel изменяет системные файлы учётных записей, удаляя все записи,
 * относящиеся к указанному имени_пользователя. Заданная учётная запись должна
 * существовать.
 *
 * @see man(8) userdel
 */
const std::string           USERDEL_UTIL    = "userdel";

/**
 * @brief Констатна CHPASSWD_UTIL содержит название утилиты  chpasswd обновления
 *        паролей в пакетном режиме.
 *
 * Программа chpasswd читает список пар «пользователь пароль» из стандартного
 * входного потока и обновляет информацию о существующих пользователях.
 * Каждая строка имеет вид: имя_пользователя:пароль
 *
 * По умолчанию, передаваемый пароль должен быть в виде обычного текста и шифруется
 * командой chpasswd. Также, если есть срок действия пароля, то он будет обновлён.
 *
 * По умолчанию пароли шифруются PAM, но (даже если это не рекомендуется) вы
 * можете выбрать другой метод шифрования с помощью параметра -e, -m или -c.
 *
 * Команда chpasswd (когда для шифрования паролей не используется PAM) сначала
 * обновляет все пароли в памяти, а затем записывает все изменения на диск, если
 * не было никаких ошибок.
 *
 * В случае когда шифрование паролей (и обновление в системной базе данных)
 * выполняется PAM и пароль не может быть обновлён, то chpasswd продолжает
 * обновление паролей остальных пользователей и завершает работу с кодом ошибки.
 *
 * Данная команда предназначена для работы в крупных системных средах, где за
 * один раз заводится несколько учётных записей.
 *
 * @see man(8) chpasswd
 */
const std::string           CHPASSWD_UTIL   = "chpasswd";

/**
 * @brief Констатна SED_UTIL содержит название утилиты sed потокового редактирования
 * для фильтрации и преобразования текста.
 *
 * @see man(1) sed
 */
const std::string           SED_UTIL        = "sed";

/**
 * @brief Констатна SUDO_UTIL содержит название утилиты sudo выполнения команды
 *        от имени другого пользователя.
 *
 * @see man(8) sudo
 */
const std::string           SUDO_UTIL       = "sudo";

/**
 * @brief Констатна ETHTOOL_UTIL содержит название утилиты ethtool отображения
 *        или смены настройек сетевой карты.
 *
 * @see man(8) ethtool
 */
const std::string           ETHTOOL_UTIL    = "ethtool";

/**
 * @brief Констатна PS_UTIL_PIDOF содержит название утилиты pidof поиска
 *        процесса с заданым номером PID.
 *
 * @see man(8) pidof
 */
const std::string           PS_UTIL_PIDOF   = "/bin/pidof";

}// namespace           admin
}// namespace           core
}// namespace           spo


#endif // SOSPOADMINLITERAL_H
